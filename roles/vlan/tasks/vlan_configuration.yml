---
- name: "VLANConfiguration: Ensuring config data conforms to the schema"
  ansible.utils.validate:
   data: "{{ config }}"
   criteria: "{{ lookup('ansible.builtin.file', './vlan_schema_creation.json')}}"
   engine: ansible.utils.jsonschema

- name: "VLANConfiguration: Checking if the vlan ids are already existing"
  fail:
    msg: "vlan id {{ item.vlan_id }} already exists "
  when: item.vlan_id|string in vlan_id_list
  with_items: "{{ config }}"



- name: "VLANConfiguration: Updating the config object with other parameters"
  set_fact:
    updated_config_list: []
- name: "VLANConfiguration: Updating the config object with other parameters"
  set_fact:
    updated_config_list: "{{ updated_config_list }} + [ {'name': '{{ item.name }}','vlan_id': '{{ item.vlan_id }}', 'remote_span': '{{ remote_span }}','shutdown': '{{ shutdown }}','state': '{{ state }}' } ]"
  with_items: "{{ config }}"

- name: "VLANConfiguration: Dumping the updated configuration"
  debug:
   var: updated_config_list

- name: "VLANConfiguration: Pusing the vlan configuration configuration"
  ios_vlans:
   config: "{{ updated_config_list }}"
   state: merged
  register: result

- name: "VLANConfiguration: Dumping the result"
  debug:
    var: result

- name: "VLANConfiguration: Verifying the Vlan Configuration"
  ios_command:
     commands: "show run vlan brief | in {{ item.name }}"
  with_items: "{{ config }}"
  register: vlan_result

- debug:
    var: vlan_result.results[0].item

- fail:
    msg: "Vlan Configuration failed for {{ item }}"
  when: vlan_result.results[0].item.name != item.name or vlan_result.results[0].item.vlan_id != item.vlan_id
  with_items: "{{ config }}"

- name: "VLANConfiguration: Adding SVI to vlans"
  include_tasks: vlan_svi_configuration.yml
  loop: "{{ config }}"
