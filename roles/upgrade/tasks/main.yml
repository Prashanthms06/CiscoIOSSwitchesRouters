---
- include_tasks: prelim.yml
  when: config_type|upper=="UPGRADE"

#- name: display parsed output
 # debug:
  #  msg: "{{ running_config.stdout[0] | parse_cli_ttp('/Users/ksss/projects/CiscoIOS/CiscoIOSSwitchesRouters/roles/upgrade/tasks/run_config.txt') }}"

- name : "Check if the firmware version file {{ upgraded_fw_name }} is present or not under the {{ ios_fw_folder }} "
  stat:
   path: "{{ ios_fw_folder }}/{{ upgraded_fw_name }}"
  register: upgrade_file_info

- debug:
    var: upgrade_file_info

- fail:
   msg: "Firmware version file {{ upgraded_fw_name }} doesn't exist under {{ ios_fw_folder }} location. "
  when: upgrade_file_info.stat.exists==false


#https://developer.cisco.com/codeexchange/github/repo/clay584/parse_genie/
- include_tasks: collect_device_information.yml
  vars:
    - task: "PreUpgrade"
    - flash_var_name: "pre_disk_space"
    - version_var_name: "old_version"
    - interface_var_name: "pre_interface_list"
    - cdp_var_name: "pre_cdp"
    - ether_var_name: "pre_ether_summary"
    - bgp_var_name: "pre_bgp_summary"
    - layer3_var_name: "pre_layer3_summary"
    - vrf_var_name: "pre_vrf_int_summary"
    - run_cfg_var_name: "pre_run_cfg"
    - bgp_vrf_var_name: "pre_bgp_vrf_summary"
    - ospf_var_name: "pre_ospf_summary"
    - fs_var_name: "pre_fs_info"
#
#
#
#Compare the older version as well and fail if they are not matchin

- fail:
   msg: "Device doesn't have enough space to upload the file. Size of the file {{ upgrade_file_info.stat.size }} and available bytes {{ pre_disk_space[0].flash_size.available_bytes }} "
  when: upgrade_file_info.stat.size|int > pre_disk_space[0].flash_size.available_bytes|int

- debug:
   msg: "Enabling the scp"

- ios_command:
    commands:
      - "conf t"
      - "ip scp server enable"

- debug:
    msg: "Copying the file {{ upgraded_fw_name }} to the device"

#- name: "Copying {{ upgraded_fw_name }} to device"
#  command: "sshpass -p {{ ansible_ssh_pass }} scp {{ ios_fw_folder }}/{{ upgraded_fw_name }} {{ ansible_ssh_user }}@{{ inventory_hostname }}:flash:{{ upgraded_fw_name }}"
#  async: 3600
#  poll: 0
#  register: copy_sleeper
#
#- name: 'Check if the firmware file {{ upgraded_fw_name }} is completed. '
#  async_status:
#    jid: "{{ copy_sleeper.ansible_job_id }}"
#  register: job_result
#  until: job_result.finished
#  retries: 3600
#  delay: 60

- debug:
   msg: "Disabling the scp"

- ios_command:
    commands:
      - "conf t"
      - "no ip scp server enable"

- debug:
    msg: "Verifying the MD5 hash"

##need to write the code for verifying the md5 hash


  ##The below is just a dummy command for the net put to work https://github.com/ansible/ansible/issues/69990
#- name: get system information
#  cli_command:
#    command: 'show version'
#- name: copy file at root dir of flash in slot 3 of sw1(ios)
#  ansible.netcommon.net_put:
#    src: "{{ ios_fw_folder }}/{{ upgraded_fw_name }}"
#    protocol: scp
#    mode: binary
#    dest: 'flash:{{ upgraded_fw_name }}'
#  vars:
#    ansible_command_timeout: 300

- include_tasks: start_upgrade.yml

# Perform the post check

- include_tasks: collect_device_information.yml
  vars:
    - task: "PostUpgrade"
    - flash_var_name: "post_disk_space"
    - version_var_name: "new_version"
    - interface_var_name: "post_interface_list"
    - cdp_var_name: "post_cdp"
    - ether_var_name: "post_ether_summary"
    - bgp_var_name: "post_bgp_summary"
    - layer3_var_name: "post_layer3_summary"
    - vrf_var_name: "post_vrf_int_summary"
    - run_cfg_var_name: "post_run_cfg"
    - bgp_vrf_var_name: "post_bgp_vrf_summary"
    - ospf_var_name: "post_ospf_summary"
    - fs_var_name: "post_fs_info"

- include_tasks: post_upgrade.yml