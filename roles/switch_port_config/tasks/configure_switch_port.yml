---

- name: "SwitchPortConfiguration: Creating the description with job id {{ tower_job_id }}"
  block:
    - set_fact:
        ansible_tower_job_id: "{{ TOWER_PREFIX }}_{{ tower_job_id }}"

    - name: "Updating the description"
      set_fact:
        updated_desc: "{{ item.description }}::{{ ansible_tower_job_id }}"
  when: tower_job_id is defined

#For some reasons not able to add the description using ios_vlans module. Hence adding via ios_config
# we shall be updating the description only when the description is not empty. If empty, then it throws
#exception of type "incomplete command"
- set_fact:
    default_description: "{{ item.description | default(description) }}"

# we will check if the interface is already in connected state.
- name: "SwitchPortConfiguration: Checking the status of interface {{ item.name }}"
  ios_command:
   commands:
     - "show interface {{ item.name }} status | include connected"
  register: result

- name: "Dumping the status of the interface {{ item.name }}"
  debug:
    var: result

- fail:
   msg: "Interface {{ item.name }} is already in connected state. Aborting the operation."
  when: not result.stdout[0]==""

- debug:
    msg: "The interface {{ item.name }} is not in connected state. Proceeding with configuration"

- name: "SwitchPortConfiguration: Adding description to port {{ item.name }}"
  ios_config:
   lines:
      - "description {{ updated_desc | default(default_description) }}"
   parents: "interface  {{ item.name }} "
  when: updated_desc is defined or default_description|trim != ""

- name: "SwitchPortConfiguration in access mode"
  block:
     - name: "SwitchPortConfiguration: Getting the authentication display config mode"
       ios_command:
        commands:
          - "authentication display config-mode"
       register: result

     - name: "Dumping the authentication display config mode"
       debug:
        var: result
    #There can be following two values
    #Current configuration mode is new-style
    #Current configuration mode is legacy

     - name: "SwitchPortConfiguration: Configuring port {{ item.name }} in access mode"
       ios_config:
        lines:
          - "switchport access vlan {{ item.access.vlan }}"
          - "switchport mode access"
          - "device-tracking attach-policy device-tracking-policy"
          - "no cdp enable"
          - "authentication timer reauthenticate server"
          - "mab"
          - "dot1x timeout tx-period 30"
          - "dot1x pae authenticator"
          - "dot1x max-reauth-req 3"
          - "spanning-tree portfast"
          - "spanning-tree bpduguard enable"
     # The following line has to be uncommented when running in the PSA environment
          #- "service-policy type control subscriber PSA_DOT1X_POLICY"
          - "no shutdown"
        parents: "interface  {{ item.name }} "
      # we are putting this configuration after the above configuration, becaue this configuration
     # ask for user input based on the authentication display config-mode.
          #- "access-session control-direction in"
          #- "access-session port-control auto"
         #- "access-session host-mode multi-auth"
     # if the authentication display config-mode is legacy, then we have to give the prompt and give the answer to yes
     # If the authentication display config-mode is new-style, then we don't have ask for the user prompt.

     - name: "SwitchPortConfiguration: Adding session for port {{ item.name }} in access mode in legacy style"
       ios_command:
        commands:
          - "conf t"
          - "interface  {{ item.name }}"
          - command: 'access-session control-direction in'
            prompt: 'This operation will permanently convert all relevant authentication commands to their CPL control-policy equivalents. As this conversion is irreversible and will disable the conversion CLI ''authentication display \[legacy|new-style\]'', you are strongly advised to back up your current configuration before proceeding.\nDo you wish to continue? \[yes\]: '
           # prompt: "Do you wish to continue? [yes]: "
            answer: "yes"
        #For the first command only we need to press yes
          - 'access-session port-control auto'
          - 'access-session host-mode multi-auth'
       when: result.stdout[0]=='Current configuration mode is legacy'


     - name: "SwitchPortConfiguration: Adding session for port {{ item.name }} in access mode in new-style"
       ios_config:
         lines:
           - "access-session control-direction in"
           - "access-session port-control auto"
           - "access-session host-mode multi-auth"
         parents: "interface  {{ item.name }} "
       when: result.stdout[0]=='Current configuration mode is new-style'

     - include_tasks: verify_access_configuration.yml

  when: item.access is defined


- name: "SwitchPortConfiguration in trunk mode"
  block:
     - validate_vlan:
        vlan_range: "{{ item.trunk.vlan_range }}"

     - name: "SwitchPortConfiguration: Configuring port {{ item.name }} in trunk mode"
       ios_config:
        lines:
          - "switchport trunk allowed vlan {{ item.trunk.vlan_range }}"
          - "switchport mode trunk"
          - "no shutdown"
        parents:
         - "interface  {{ item.name }} "
     # The following line has to be uncommented when running in the PSA environment
          #- "service-policy type control subscriber PSA_DOT1X_POLICY"
     - name: "SwitchPortConfiguration: Configuring port {{ item.name }} in trunk mode"
       ios_config:
         lines:
           - "policy static sgt 500 trusted"
         parents:
           - "interface  {{ item.name }} "
           - "cts manual"

     - include_tasks: verify_trunk_configuration.yml

  when: item.trunk is defined

#interface {{ interface_num }}
# switchport
# channel-group {{ port_channel_num }} mode active
#!
#
#interface {{ port_channel_num }}
# switchport
# switchport mode trunk
# switchport trunk allowed vlan add {{ vlan_num }}
- name: "SwitchPortConfiguration in port_mapping"
  block:
     - name: "SwitchPortConfiguration: Configuring port {{ item.name }} in port-mapping"
       ios_command:
        commands:
          - "conf t"
          - "interface  {{ item.name }}"
          - "switchport "
          - "channel-group {{ item.port_mapping.port_channel_num }} mode active"
          - "interface  port-channel {{ item.port_mapping.port_channel_num }} "
          - "switchport "
          - "switchport mode trunk"
          - "switchport trunk allowed vlan add {{ item.port_mapping.vlan_num }}"
        #parents: "interface  {{ item.name }} "
       register: result
       failed_when: not result.changed

  when: item.port_mapping is defined